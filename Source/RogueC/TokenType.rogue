class TokenType
  GLOBAL PROPERTIES
    lookup                        : Table<<String,TokenType>>

    # Meta commands
    meta_auto_id                  : TokenType
    meta_block                    : TokenType
    meta_endBlock                 : TokenType
    meta_define                   : TokenType
    meta_defined                  : TokenType
    meta_error                    : TokenType
    meta_essential                : TokenType
    meta_if                       : TokenType
    meta_elseIf                   : TokenType
    meta_else                     : TokenType
    meta_endIf                    : TokenType
    meta_include                  : TokenType
    meta_includeFolder            : TokenType
    meta_join                     : TokenType
    meta_localDefine              : TokenType
    meta_localMacro               : TokenType
    meta_macro                    : TokenType
    meta_endMacro                 : TokenType
    meta_endMetacode              : TokenType
    meta_methodSignature          : TokenType
    meta_module                   : TokenType
    meta_moduleName               : TokenType
    meta_requireRogue             : TokenType
    meta_rogueVersion             : TokenType
    meta_uses                     : TokenType
    meta_string                   : TokenType
    meta_warning                  : TokenType

    placeholder_id                : TokenType
    begin_augment_tokens          : TokenType

    # Structure
    keyword_augment               : TokenType
    keyword_case                  : TokenType
    keyword_caseNext              : TokenType
    keyword_catch                 : TokenType
    keyword_class                 : TokenType
    keyword_CATEGORIES            : TokenType
    keyword_compileArg            : TokenType
    keyword_DEFINITIONS           : TokenType
    keyword_DEPENDENCIES          : TokenType
    keyword_else                  : TokenType
    keyword_elseIf                : TokenType
    keyword_endAugment            : TokenType
    keyword_endBlock              : TokenType
    keyword_endClass              : TokenType
    keyword_endContingent         : TokenType
    keyword_endEnum               : TokenType
    keyword_endForEach            : TokenType
    keyword_endFunction           : TokenType
    keyword_endIf                 : TokenType
    keyword_endLoop               : TokenType
    keyword_endRoutine            : TokenType
    keyword_endSubclass           : TokenType
    keyword_endTemporarily        : TokenType
    keyword_endTry                : TokenType
    keyword_endUnitTest           : TokenType
    keyword_endUse                : TokenType
    keyword_endWhich              : TokenType
    keyword_endWhile              : TokenType
    keyword_ENUMERATE             : TokenType
    keyword_enum                  : TokenType
    keyword_GLOBAL                : TokenType
    keyword_includeNativeCode     : TokenType
    keyword_includeNativeHeader   : TokenType
    keyword_includeSource         : TokenType
    keyword_includeSourceFolder   : TokenType
    keyword_method                : TokenType
    keyword_METHODS               : TokenType
    keyword_nativeCode            : TokenType
    keyword_nativeHeader          : TokenType
    keyword_nativeLibrary         : TokenType
    keyword_others                : TokenType
    keyword_PROPERTIES            : TokenType
    keyword_routine               : TokenType
    keyword_satisfied             : TokenType
    keyword_subclass              : TokenType
    keyword_temporarily           : TokenType
    keyword_unsatisfied           : TokenType
    keyword_with                  : TokenType

    symbol_close_brace            : TokenType
    symbol_close_bracket          : TokenType
    symbol_close_comment          : TokenType
    symbol_close_paren            : TokenType
    symbol_close_specialize       : TokenType

    # General
    eol                           : TokenType
    eoi                           : TokenType

    # Statements
    keyword_assert                : TokenType
    keyword_await                 : TokenType
    keyword_block                 : TokenType
    keyword_compileError          : TokenType
    keyword_contingent            : TokenType
    keyword_deprecated            : TokenType
    keyword_ensure                : TokenType
    keyword_escapeBlock           : TokenType
    keyword_escapeContingent      : TokenType
    keyword_escapeForEach         : TokenType
    keyword_escapeIf              : TokenType
    keyword_escapeLoop            : TokenType
    keyword_escapeTemporarily     : TokenType
    keyword_escapeTry             : TokenType
    keyword_escapeUse             : TokenType
    keyword_escapeWhich           : TokenType
    keyword_escapeWhile           : TokenType
    keyword_forEach               : TokenType
    keyword_function              : TokenType
    keyword_global                : TokenType
    keyword_if                    : TokenType
    keyword_in                    : TokenType
    keyword_infinity              : TokenType
    keyword_local                 : TokenType
    keyword_localize              : TokenType
    keyword_loop                  : TokenType
    keyword_NaN                   : TokenType
    keyword_native                : TokenType
    keyword_necessary             : TokenType
    keyword_noAction              : TokenType
    keyword_null                  : TokenType
    keyword_of                    : TokenType
    keyword_require               : TokenType
    keyword_return                : TokenType
    keyword_nextIteration         : TokenType
    keyword_step                  : TokenType
    keyword_sufficient            : TokenType
    keyword_swapValues            : TokenType
    keyword_throw                 : TokenType
    keyword_trace                 : TokenType
    keyword_trace_args_only       : TokenType
    keyword_try                   : TokenType
    keyword_unitTest              : TokenType
    keyword_use                   : TokenType
    keyword_which                 : TokenType
    keyword_while                 : TokenType
    keyword_yield                 : TokenType

    # Expressions
    identifier                    : TokenType
    type_identifier               : TokenType   # Contains complete type e.g. "Table<<String,Int32>>[]"
    literal_character             : TokenType
    literal_int32                 : TokenType
    literal_int64                 : TokenType
    literal_real64                : TokenType
    literal_string                : TokenType

    keyword_and                   : TokenType
    keyword_as                    : TokenType
    keyword_downTo                : TokenType
    keyword_false                 : TokenType
    keyword_instanceOf            : TokenType
    keyword_is                    : TokenType
    keyword_isAspect              : TokenType
    keyword_isClass               : TokenType
    keyword_isComparable          : TokenType
    keyword_isCompound            : TokenType
    keyword_isPrimitive           : TokenType
    keyword_isReference           : TokenType
    keyword_isString              : TokenType
    keyword_isType                : TokenType
    keyword_meta                  : TokenType
    keyword_not                   : TokenType
    keyword_or                    : TokenType
    keyword_pi                    : TokenType
    keyword_prior                 : TokenType
    keyword_this                  : TokenType
    keyword_ThisType              : TokenType
    keyword_true                  : TokenType
    keyword_xor                   : TokenType

    symbol_ampersand              : TokenType
    symbol_ampersand_equals       : TokenType
    symbol_double_ampersand       : TokenType
    symbol_arrow                  : TokenType
    symbol_at                     : TokenType
    symbol_at_brace               : TokenType
    symbol_at_bracket             : TokenType
    symbol_backslash              : TokenType
    symbol_caret                  : TokenType
    symbol_caret_equals           : TokenType
    symbol_change_state           : TokenType
    symbol_colon                  : TokenType
    symbol_colon_colon            : TokenType
    symbol_comma                  : TokenType
    symbol_compare                : TokenType
    symbol_dollar                 : TokenType
    symbol_dot                    : TokenType
    symbol_dot_equals             : TokenType
    symbol_downToGreaterThan      : TokenType
    symbol_empty_braces           : TokenType
    symbol_empty_brackets         : TokenType
    symbol_eq                     : TokenType
    symbol_equals                 : TokenType
    symbol_exclamation_point      : TokenType
    symbol_fat_arrow              : TokenType
    symbol_ge                     : TokenType
    symbol_gt                     : TokenType
    symbol_le                     : TokenType
    symbol_lt                     : TokenType
    symbol_minus                  : TokenType
    symbol_minus_equals           : TokenType
    symbol_minus_minus            : TokenType
    symbol_ne                     : TokenType
    symbol_open_brace             : TokenType
    symbol_open_bracket           : TokenType
    symbol_open_paren             : TokenType
    symbol_open_specialize        : TokenType
    symbol_percent                : TokenType
    symbol_percent_equals         : TokenType
    symbol_plus                   : TokenType
    symbol_plus_equals            : TokenType
    symbol_plus_plus              : TokenType
    symbol_question_mark          : TokenType
    symbol_select                 : TokenType
    symbol_semicolon              : TokenType
    symbol_shift_left             : TokenType
    symbol_shift_right            : TokenType
    symbol_shift_right_x          : TokenType
    symbol_slash                  : TokenType
    symbol_slash_equals           : TokenType
    symbol_slash_slash            : TokenType
    symbol_tilde                  : TokenType
    symbol_tilde_equals           : TokenType
    symbol_times                  : TokenType
    symbol_times_equals           : TokenType
    symbol_upTo                   : TokenType
    symbol_upToLessThan           : TokenType
    symbol_vertical_bar           : TokenType
    symbol_vertical_bar_equals    : TokenType
    symbol_double_vertical_bar    : TokenType

    # Noise words
    keyword_do                    : TokenType

  PROPERTIES
    name           : String
    is_end_command : Logical
    is_non_method  : Logical

  METHODS
    method init( name )

    method create_token( filepath:String, line:Int32, column:Int32 )->Token
      return Token( this ).set_location( filepath, line, column )

    method create_token( filepath:String, line:Int32, column:Int32, value:Character )->Token
      return LiteralCharacterToken( this, value ).set_location( filepath, line, column )

    method create_token( filepath:String, line:Int32, column:Int32, value:Int64 )->Token
      return LiteralInt64Token( this, value ).set_location( filepath, line, column )

    method create_token( filepath:String, line:Int32, column:Int32, value:Int32 )->Token
      return LiteralInt32Token( this, value ).set_location( filepath, line, column )

    method create_token( filepath:String, line:Int32, column:Int32, value:Real64 )->Token
      return LiteralReal64Token( this, value ).set_location( filepath, line, column )

    method create_token( filepath:String, line:Int32, column:Int32, value:String )->Token
      return StringDataToken( this, value ).set_location( filepath, line, column )

    method create_token( existing:Token )->Token
      return create_token( existing.filepath, existing.line, existing.column )

    method create_token( existing:Token, value:String )->Token
      return create_token( existing.filepath, existing.line, existing.column, value )

    method create_token( existing:Token, original_type:Type, target_type:Type )->Token
      return TypeIdentifierToken( this, original_type, target_type ).set_location( existing )

    method is_directive->Logical
      return false

    method is_method_content->Logical [macro]
      not is_non_method

    method is_op_with_assign->Logical
      return false

    method is_structure->Logical
      return false

    method mark_end_command->this
      is_end_command = true
      return this

    method mark_non_method->this
      is_non_method = true
      return this

    method quoted_name->String
      return "'$'" (name)

    method to->String
      return name

    method to_String( t:Token )->String
      return name
endClass

class EOLTokenType : TokenType
  METHODS
    method create_token( filepath:String, line:Int32, column:Int32 )->Token
      return EOLToken( this, "" ).set_location( filepath, line, column )

    method create_token( filepath:String, line:Int32, column:Int32, value:String )->Token
      return EOLToken( this, value ).set_location( filepath, line, column )

    method is_structure->Logical
      return false
endClass

class NativeCodeTokenType : TokenType
  METHODS
    method create_token( filepath:String, line:Int32, column:Int32, value:String )->Token
      return NativeCodeToken( this, value ).set_location( filepath, line, column )

    method create_token( existing:Token, value:String )->Token
      return NativeCodeToken( this, value ).set_location( existing.filepath, existing.line, existing.column )
endClass

class StructureTokenType : TokenType
  METHODS
    method create_token( filepath:String, line:Int32, column:Int32 )->Token
      return Token( this ).set_location( filepath, line, column )

    method is_structure->Logical
      return true
endClass

class DirectiveTokenType : TokenType
  METHODS
    method create_token( filepath:String, line:Int32, column:Int32 )->Token
      return Token( this ).set_location( filepath, line, column )

    method is_directive->Logical
      return true
endClass

class StructuralDirectiveTokenType : TokenType
  METHODS
    method create_token( filepath:String, line:Int32, column:Int32 )->Token
      return Token( this ).set_location( filepath, line, column )

    method is_directive->Logical
      return true

    method is_structure->Logical
      return true
endClass

class ModifyAndAssignTokenType : TokenType
  METHODS
    method is_op_with_assign->Logical
      return true
endClass
