# EXAMPLES
#
# uses Utility/Timer
#
# # Stopwatch mode
# block
#   local timer = Timer()
#   println timer          # 0.00 seconds
#   System.sleep(1.5)
#   println timer          # 1.50 seconds
#   println
# endBlock
#
# # Countdown mode
# block
#   local timer = Timer(2.5)
#   println timer.is_expired  # false
#   System.sleep(1)
#   println timer.is_expired  # false
#   System.sleep(1)
#   println timer.is_expired  # false
#   System.sleep(1)
#   println timer.is_expired  # true
#   println
# endBlock

class Timer
  PROPERTIES
    duration_ms   : Int32
    start_time_ms : Int32
    stop_time_ms  : Int32?
    counting_down : Logical

  METHODS
    method init( &stopped )
      counting_down = false
      start_time_ms = System.execution_time_ms
      if (stopped) stop_time_ms = start_time_ms
      else         stop_time_ms = null

    method init( duration:Real, &stopped )
      counting_down = true
      duration_ms = (duration * 1000)->Int32
      start_time_ms = System.execution_time_ms
      if (stopped) stop_time_ms = start_time_ms
      else         stop_time_ms = null

    method elapsed->Real
      return elapsed_ms / 1000.0

    method elapsed_ms->Int32
      local ms : Int32
      if (stop_time_ms.exists) ms = (stop_time_ms.value - start_time_ms)
      else                     ms = (System.execution_time_ms - start_time_ms)

      if (counting_down) ms .= or_smaller(duration_ms)
      return ms

    method is_expired->Logical
      return elapsed_ms >= duration_ms

    method is_running->Logical
      return not stop_time_ms.exists

    method is_stopped->Logical
      return stop_time_ms.exists

    method restart
      start_time_ms = System.execution_time_ms
      stop_time_ms = null

    method start
      # Starts if currently stopped; otherwise no effect.
      if (stop_time_ms.exists)
        start_time_ms = System.execution_time_ms - elapsed
        stop_time_ms = null
      endIf

    method stop
      # Stops if currently running; otherwise no effect.
      if (not stop_time_ms.exists) stop_time_ms = System.execution_time_ms

    method operator+( delta_time:Real )->this
      # Increase the elapsed interval of this stopwatch.
      start_time_ms -= (delta_time / 1000.0)->Int32
      return this

    method operator-( delta_time:Real )->this
      # Decrease the elapsed interval of this stopwatch.
      start_time_ms += (delta_time / 1000.0)->Int32
      return this

    method to->String
      return String().[ print(elapsed,2), print(" seconds") ]

endClass
