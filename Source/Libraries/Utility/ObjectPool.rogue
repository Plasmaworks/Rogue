class ObjectPool<<$DataType>> [singleton]
  PROPERTIES
    available = $DataType[]

  METHODS
    method on_use->$DataType
      if (available.is_empty) return $DataType()
      return available.remove_last

    method on_end_use( object:$DataType )
      # override with desired object cleanup
      local poolable = object->(as Poolable)
      if (poolable) poolable.on_return_to_pool
      available.add( object )
endClass

class Poolable [aspect]
  METHODS
    method on_return_to_pool
endClass
