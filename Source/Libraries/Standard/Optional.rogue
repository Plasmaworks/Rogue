class Optional<<$DataType>>( value:$DataType, exists=true:Logical ) [compound]
  GLOBAL METHODS
    method create->$DataType?
      local default_value : $DataType
      return $DataType?( default_value, false )

  METHODS
    method required_value->$DataType
      require exists || "Non-null value expected"
      return value

    method to->String
      if (exists) return value->String
      else        return "null"

    method operator==( other:$DataType? )->Logical
      if (exists) return ?:{ other.exists:(value==other.value) || false }
      else        return ?:{ other.exists:false || true }
endClass

augment Real64?
  METHODS
    method to->Real32?
      return which{ this|| Real32?() }

    method to->Int64?
      return which{ this || Int64?() }

    method to->Int32?
      return which{ this || Int32?() }

    method to->Character?
      return which{ this || Character?() }

    method to->Byte?
      return which{ this || Byte?() }
endAugment

augment Real32?
  METHODS
    method to->Real64?
      return which{ this|| Real64?() }

    method to->Int64?
      return which{ this || Int64?() }

    method to->Int32?
      return which{ this || Int32?() }

    method to->Character?
      return which{ this || Character?() }

    method to->Byte?
      return which{ this || Byte?() }
endAugment

augment Int64?
  METHODS
    method to->Real64?
      return which{ this|| Real64?() }

    method to->Real32?
      return which{ this || Real32?() }

    method to->Int32?
      return which{ this || Int32?() }

    method to->Character?
      return which{ this || Character?() }

    method to->Byte?
      return which{ this || Byte?() }
endAugment

augment Int32?
  METHODS
    method to->Real64?
      return which{ this|| Real64?() }

    method to->Real32?
      return which{ this || Real32?() }

    method to->Int64?
      return which{ this || Int64?() }

    method to->Character?
      return which{ this || Character?() }

    method to->Byte?
      return which{ this || Byte?() }
endAugment

augment Character?
  METHODS
    method to->Real64?
      return which{ this|| Real64?() }

    method to->Real32?
      return which{ this || Real32?() }

    method to->Int64?
      return which{ this || Int64?() }

    method to->Int32?
      return which{ this || Int32?() }

    method to->Byte?
      return which{ this || Byte?() }
endAugment

augment Byte?
  METHODS
    method to->Real64?
      return which{ this|| Real64?() }

    method to->Real32?
      return which{ this || Real32?() }

    method to->Int64?
      return which{ this || Int64?() }

    method to->Int32?
      return which{ this || Int32?() }

    method to->Character?
      return which{ this || Character?() }
endAugment

