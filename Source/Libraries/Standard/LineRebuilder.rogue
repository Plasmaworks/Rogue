class LineRebuilder : LineReader, BufferedPrintWriter<<builder>>
  # USAGE
  #   forEach (line in rebuilder=File.rebuilder(filename))
  #     # OR: forEach (line in rebuilder=LineRebuilder(File(filename)))
  #     if (line ...) rebuilder.println( modified_line )
  #     else          rebuilder.println( line )
  #
  #     if (early_abort) rebuilder.save; escapeForEach
  #   endForEach

  PROPERTIES
    file      : File
    auto_save = true

    _next     : String

  METHODS
    method init( file )
      prior.init( file )
      builder.reserve( file.size )

    method init( string:String )
      prior.init( string )
      builder.reserve( string.count )

    method close
      prior.close
      if (auto_save) save

    method flush( buffer:StringBuilder )
      noAction  # just leave text in 'builder'

    method has_another->Logical
      if (prior.has_another) return true
      close
      return false

    method rebuild( filter:Function(String)->String )->String
      forEach (line in this)
        line = filter(line)
        if (line)
          println( line )
        else
          local result = builder->String
          if (file) file.save( result )
          return result
        endIf
      endForEach
      return builder->String

    method save
      require file
      file.save( builder->String )

    method description->String
      return builder->String
endClass
