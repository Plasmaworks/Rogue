module UI

class DirtyRegionTracker : Poolable
  METHODS
    method add( drawable:Drawable2D )
      noAction

    method add( region:Box )
      noAction

    method clear
      noAction

    method count->Int32
      return 0

    method on_end_use( list:Box[] )
      WorkList<<Box>>.on_end_use( list )

    method on_return_to_pool
      clear

    method on_use->Box[]
      return WorkList<<Box>>.on_use
endClass

class SimpleDirtyRegionTracker : DirtyRegionTracker
  PROPERTIES
    dirty_bounds : Box?

  METHODS
    method add( drawable:Drawable2D )
      add( drawable.last_placement.display_bounds )
      add( drawable.placement.display_bounds )

    method add( region:Box )
      if (dirty_bounds.exists)
        dirty_bounds = dirty_bounds.value | region
      else
        dirty_bounds = region
      endIf

    method clear
      dirty_bounds = null

    method count->Int32
      return which { dirty_bounds.exists:1 || 0 }

    method on_use->Box[]
      local list = prior.on_use
      if (dirty_bounds) list.add( dirty_bounds.value )
      return list
endClass
