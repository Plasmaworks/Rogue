module UI

class UIBorder : UIComponent
  PROPERTIES
    left, top, right, bottom : Int32

  METHODS
    method init( content:Entity, size:Int32 )
      prior.init( content )
      left = size
      top = size
      right = size
      bottom = size

    method init( content:Entity, left:Int32, top:Int32, right:Int32, bottom:Int32 )
      prior.init( content )

    method measure_height( container_height:Int32? )->Int32?
      if (is_fixed_height) return placement.size.y
      if (is_expand_to_fill_height) return container_height

      # Shrink to fit content height
      local result : Int32?
      use subcomponents = collect<<UIComponent>>
        result = measure_content_height( subcomponents )
      endUse

      if (result) return result.value + top + bottom
      return container_height

    method measure_width( container_width:Int32? )->Int32?
      if (is_fixed_width) return placement.size.x
      if (is_expand_to_fill_width) return container_width

      # Shrink to fit content width
      local result : Int32?
      use subcomponents = collect<<UIComponent>>
        result = measure_content_width( subcomponents )
      endUse

      if (result) return result.value + left + right
      return container_width

    method update_layout_height( container_height:Int32 ) [override]
      height = which{ measure_height(container_height) || container_height }

      use subcomponents = collect<<UIComponent>>
        update_subcomponent_heights( subcomponents, (placement.size.y - (top + bottom)).clamped_low(0) )
      endUse

    method update_layout_placement( container:IntBox ) [override]
      position = IntBox(placement.size).positioned_within( container, placement.anchor ).position
      update_subcomponent_placement( IntBox(left,top,(placement.size-IntXY(left+right,top+bottom)).clamped_low(IntXY(0,0))) )

    method update_layout_width( container_width:Int32 ) [override]
      width = which{ measure_width(container_width) || container_width }

      use subcomponents = collect<<UIComponent>>
        update_subcomponent_widths( subcomponents, (placement.size.x-(left+right)).clamped_low(0) )
      endUse
endClass
