uses UI

class UIAttributes [singleton]
  METHODS
    method alignment( component:UIComponent )->Anchor
      if (component.attributes)
        local alignment = component.attributes.alignment
        if (alignment) return alignment.value
      endIf
      if (component.parent) return component.parent.alignment
      return Anchor.TOP_LEFT

    method anchor( component:UIComponent )->Anchor
      if (component.attributes)
        local anchor = component.attributes.anchor
        if (anchor) return anchor.value
      endIf
      return Anchor.TOP_LEFT

    method font( component:UIComponent )->UIFont
      if (component.attributes)
        local font = component.attributes.font
        if (font) return font
      endIf
      if (component.parent) return component.parent.font
      return UI.default_font

    method weight( component:UIComponent )->XY
      if (component.attributes) return component.attributes.weight
      else                      return XY(1,1)

    method set_alignment( component:UIComponent, value:Anchor )
      if (component.attributes) component.attributes.set_alignment( value )
      else                      component.attributes = UIAlignmentAttribute( value )

    method set_anchor( component:UIComponent, value:Anchor )
      if (component.attributes) component.attributes.set_anchor( value )
      else                      component.attributes = UIAnchorAttribute( value )

    method set_font( component:UIComponent, value:UIFont )
      if (component.attributes) component.attributes.set_font( value )
      else                      component.attributes = UIFontAttribute( value )

    method set_weight( component:UIComponent, value:XY )
      if (component.attributes) component.attributes.set_weight( value )
      else                      component.attributes = UIWeightAttribute( value )

endClass

class UIAttribute
  PROPERTIES
    next : UIAttribute

  METHODS
    method alignment->Anchor?
      if (next) return next.alignment
      return null

    method anchor->Anchor?
      if (next) return next.anchor
      return null

    method font->UIFont
      if (next) return next.font
      return null

    method weight->XY
      if (next) return next.weight
      return XY(1,1)

    method set_alignment( value:Anchor )
      if (next) next.set_alignment( value )
      else      next = UIAlignmentAttribute( value )

    method set_anchor( value:Anchor )
      if (next) next.set_anchor( value )
      else      next = UIAnchorAttribute( value )

    method set_font( value:UIFont )
      if (next) next.set_font( value )
      else      next = UIFontAttribute( value )

    method set_weight( value:XY )
      if (next) next.set_weight( value )
      else      next = UIWeightAttribute( value )
endClass

class UIAlignmentAttribute( value:Anchor ) : UIAttribute
  METHODS
    method alignment->Anchor?
      return value

    method set_alignment( value )
endClass

class UIAnchorAttribute( value:Anchor ) : UIAttribute
  METHODS
    method anchor->Anchor?
      return value

    method set_anchor( value )
endClass

class UIFontAttribute( value:UIFont ) : UIAttribute
  METHODS
    method font->UIFont
      return value

    method set_font( value )
endClass

class UIWeightAttribute( value:XY ) : UIAttribute
  METHODS
    method weight->XY
      return value

    method set_weight( value )
endClass
